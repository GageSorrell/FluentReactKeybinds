import{h,u as C,l as R,y as K,c as I,m as o,V as q,a as l,o as O}from"./chunks/framework.lhzzn3gs.js";import{c as p,r as e,K as E,F as m,w as b,a as _}from"./chunks/UseKeybindDialog.Styles.J-GOknaZ.js";import{K as M,B as A}from"./chunks/UseKeybindDialog.eqC-gMeW.js";import{K as V}from"./chunks/UseKeybindRecorder.s8mOIq4b.js";const B=q('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><p>It is often desirable to allow users to view combinations of keys, and to record them for the purpose of having keyboard shortcuts.</p><p>This package allows the developer to accomplish this in a Fluent UI environment within a React app. Components exist to display keys, whether it be in-line, or displayed as their own block of elements.</p><p>Additionally, the ability to record keyboard shortcuts is given by this package. The API surface is designed in a way that will make the developer feel &quot;at home&quot; while they work with the official Fluent UI components for React.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><h3 id="keybind-sequence" tabindex="-1">Keybind Sequence <a class="header-anchor" href="#keybind-sequence" aria-label="Permalink to &quot;Keybind Sequence&quot;">​</a></h3>',6),F=o("h3",{id:"keybind-recorder",tabindex:"-1"},[l("Keybind Recorder "),o("a",{class:"header-anchor",href:"#keybind-recorder","aria-label":'Permalink to "Keybind Recorder"'},"​")],-1),N=o("p",null,[o("em",null,[l("For this example, please click the Recorder component to gain focus of it. Focus handling is provided by the "),o("code",null,"KeybindDialog"),l(" wrapper component.")])],-1),U=o("h3",{id:"keybind-dialog",tabindex:"-1"},[l("Keybind Dialog "),o("a",{class:"header-anchor",href:"#keybind-dialog","aria-label":'Permalink to "Keybind Dialog"'},"​")],-1),L=q('<h2 id="some-example-use-cases" tabindex="-1">Some Example Use Cases <a class="header-anchor" href="#some-example-use-cases" aria-label="Permalink to &quot;Some Example Use Cases&quot;">​</a></h2><ul><li>Display and record keyboard shortcuts of your app on a Settings page</li><li>Display keyboard shortcuts next to menu items in a list</li><li>Show example input that corresponds to a demo of your app</li><li>Show recent input of the user for the sake of memory</li></ul><h2 id="support" tabindex="-1">Support <a class="header-anchor" href="#support" aria-label="Permalink to &quot;Support&quot;">​</a></h2><p>This package works on Chromium-based browsers; the ability to convert DOM codes to OS-level key codes is currently only available for Windows.</p><p>Other browsers and OSes might be supported in the future, but because Fluent UI is a Microsoft library, the focus of this package is the Windows environment.</p>',5),X=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"guides/introduction.md","filePath":"guides/introduction.md"}'),W={name:"guides/introduction.md"},Y=Object.assign(W,{setup(j){const y=h(),f=h(),k=h(),r=C().isDark,g=t=>{let a=r.value;const n="Example Dialog Component",i="This example dialog accepts a keybind, which is displayed below the triggering button once the keybind is saved.",[s,c]=e.useState([]),x=T=>{c(T)},[d,u]=e.useState(!1),w=e.createElement(M,{onSave:x,Sequence:s,open:d,setOpen:u,Title:n,Content:i},null),D=e.createElement(E,{Sequence:s}),P=e.createElement(A,{children:["Open Dialog"],style:{marginBottom:"1rem"},onClick:()=>{u(!0)}});return e.createElement(m,{theme:a?b:_},P,D,w)},S=t=>{let a=r.value;const n=e.createElement(E,{CornerDirection:!0,Sequence:["MetaLeft","ShiftRight","Digit6"]},null);return e.createElement(m,{theme:a?b:_},n)},v=t=>{const[a,n]=e.useState(!1),i=d=>{n(u=>d)};let s=r.value;const c=e.createElement(V,{OnChange:i,Sequence:a},null);return e.createElement(m,{theme:s?b:_},c)};return R(()=>{const t=[p(k.value),p(f.value),p(y.value)];K(r,(a,n)=>{t[0].render(e.createElement(g,{},null)),t[1].render(e.createElement(v,{},null)),t[2].render(e.createElement(S,{},null))}),t[0].render(e.createElement(g,{},null)),t[1].render(e.createElement(v,{},null)),t[2].render(e.createElement(S,{},null))}),(t,a)=>(O(),I("div",null,[B,o("div",{ref_key:"SequenceExample",ref:k},null,512),F,N,o("div",{ref_key:"RecorderExample",ref:f},null,512),U,o("div",{ref_key:"DialogExample",ref:y},null,512),L]))}});export{X as __pageData,Y as default};
