import{h as p,u as c,l as y,y as E,c as g,m as u,V as r,o as m}from"./chunks/framework.lhzzn3gs.js";import{c as b,r as e,F,w as f,a as q}from"./chunks/UseKeybindDialog.Styles.J-GOknaZ.js";import{K as D}from"./chunks/UseKeybindRecorder.s8mOIq4b.js";const C=r('<h1 id="keybind-recorder" tabindex="-1">Keybind Recorder <a class="header-anchor" href="#keybind-recorder" aria-label="Permalink to &quot;Keybind Recorder&quot;">​</a></h1><p>This component allows the user to record a keybind, for your app to save and use later in the user experience.</p><p>It is intended to be wrapped in something to handle focus, and saving the sequence that it records. The default implementation of this is the <a href="./keybind-dialog.html"><code>KeybindDialog</code> component.</a></p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><p><em>Click the Recorder component to gain focus of it.</em></p>',5),K=r(`<details class="details custom-block"><summary>Code Snippet</summary><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> React </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;react&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ReactDOM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;react-dom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { FluentProvider, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Theme, webLightTheme, webDarkTheme } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@fluentui/react-components&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Key, KeySequence } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;react-fluent-keybinds&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DarkMode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.matchMedia </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">matchMedia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;(prefers-color-scheme: dark)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).matches;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> theme</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Theme</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DarkMode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webDarkTheme </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webLightTheme;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Sequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SetSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnChange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">NewSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    SetSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">_Old</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NewSequence);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ReactDOM.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">render</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FluentProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ theme } }&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">KeybindRecorder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ OnChange, Sequence } }/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FluentProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></details><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h3><ul><li><a href="./keybind-recorder.html#fkeysequence">FKeySequence</a></li><li><a href="./keybind-recorder.html#pkeybindrecorder">PKeybindRecorder</a></li><li><a href="./keybind-recorder.html#skeybindrecorder">SKeybindRecorder</a></li></ul><h2 id="type-aliases-1" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases-1" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="fkeysequence" tabindex="-1">FKeySequence <a class="header-anchor" href="#fkeysequence" aria-label="Permalink to &quot;FKeySequence&quot;">​</a></h3><p>Ƭ <strong>FKeySequence</strong>: <a href="./key.html#fdomkey"><code>FDomKey</code></a>[]</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/41f23cc/Source/Component/KeybindRecorder/KeybindRecorder.Types.ts#L43" target="_blank" rel="noreferrer">Component/KeybindRecorder/KeybindRecorder.Types.ts:43</a></p><hr><h3 id="pkeybindrecorder" tabindex="-1">PKeybindRecorder <a class="header-anchor" href="#pkeybindrecorder" aria-label="Permalink to &quot;PKeybindRecorder&quot;">​</a></h3><p>Ƭ <strong>PKeybindRecorder</strong>: <code>Pick</code>&lt;<a href="./key.html#pkey"><code>PKey</code></a>, <code>&quot;CornerDirection&quot;</code>&gt; &amp; { <code>Sequence</code>: <a href="./keybind-recorder.html#fkeysequence"><code>FKeySequence</code></a> } &amp; <code>Partial</code>&lt;{ <code>ExclusionList</code>: <a href="./key.html#fdomkey"><code>FDomKey</code></a>[] ; <code>MaxLength</code>: <code>number</code> ; <code>OnBlur</code>: (<code>Event</code>: <code>FocusEvent</code>, <code>ClearSequence</code>: () =&gt; <code>void</code>) =&gt; <code>void</code> ; <code>OnChange</code>: (<code>NewSequence</code>: <a href="./keybind-recorder.html#fkeysequence"><code>FKeySequence</code></a>) =&gt; <code>void</code> ; <code>OnExcludedKeyPressed</code>: (<code>Key</code>: <a href="./key.html#fdomkey"><code>FDomKey</code></a>) =&gt; <code>void</code> }&gt;</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/41f23cc/Source/Component/KeybindRecorder/KeybindRecorder.Types.ts#L11" target="_blank" rel="noreferrer">Component/KeybindRecorder/KeybindRecorder.Types.ts:11</a></p><hr><h3 id="skeybindrecorder" tabindex="-1">SKeybindRecorder <a class="header-anchor" href="#skeybindrecorder" aria-label="Permalink to &quot;SKeybindRecorder&quot;">​</a></h3><p>Ƭ <strong>SKeybindRecorder</strong>: <code>Omit</code>&lt;<a href="./keybind-recorder.html#pkeybindrecorder"><code>PKeybindRecorder</code></a>, <code>&quot;OnChange&quot;</code>&gt; &amp; <a href="./utility.html"><code>FStyledState</code></a> &amp; { <code>onBlur</code>: (<code>Event</code>: <code>FocusEvent</code>) =&gt; <code>void</code> ; <code>onKeyDown</code>: (<code>Event</code>: <code>KeyboardEvent</code>) =&gt; <code>void</code> ; <code>onKeyUp</code>: (<code>Event</code>: <code>KeyboardEvent</code>) =&gt; <code>void</code> }</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/41f23cc/Source/Component/KeybindRecorder/KeybindRecorder.Types.ts#L45" target="_blank" rel="noreferrer">Component/KeybindRecorder/KeybindRecorder.Types.ts:45</a></p>`,19),B=JSON.parse('{"title":"Keybind Recorder","description":"","frontmatter":{},"headers":[],"relativePath":"components/keybind-recorder.md","filePath":"components/keybind-recorder.md"}'),_={name:"components/keybind-recorder.md"},x=Object.assign(_,{setup(S){const a=p(),n=c().isDark,t=s=>{const[i,h]=e.useState(!1),l=k=>{h(R=>k)};let d=n.value;const o=e.createElement(D,{OnChange:l,Sequence:i},null);return e.createElement(F,{theme:d?f:q},o)};return y(()=>{const s=b(a.value);E(n,(i,h)=>{s.render(e.createElement(t,{},null))}),s.render(e.createElement(t,{},null))}),(s,i)=>(m(),g("div",null,[C,u("div",{ref_key:"DefaultExample",ref:a},null,512),K]))}});export{B as __pageData,x as default};
