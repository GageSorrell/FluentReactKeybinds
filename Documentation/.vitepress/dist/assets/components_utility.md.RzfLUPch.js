import{_ as e,c as t,o as a,V as o}from"./chunks/framework.lhzzn3gs.js";const u=JSON.parse('{"title":"Utility","description":"","frontmatter":{},"headers":[],"relativePath":"components/utility.md","filePath":"components/utility.md"}'),d={name:"components/utility.md"},l=o('<h1 id="utility" tabindex="-1">Utility <a class="header-anchor" href="#utility" aria-label="Permalink to &quot;Utility&quot;">​</a></h1><p>This module contains some helpful types and factories.</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h3><ul><li><a href="./utility.html">FStyledState</a></li></ul><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h3><ul><li><a href="./utility.html#fcomponentfactory">FComponentFactory</a></li><li><a href="./utility.html#frootstyles">FRootStyles</a></li><li><a href="./utility.html#fstylable">FStylable</a></li><li><a href="./utility.html#pparentcomponent">PParentComponent</a></li><li><a href="./utility.html#tcomplement">TComplement</a></li><li><a href="./utility.html#tcomponentrenderfunction">TComponentRenderFunction</a></li><li><a href="./utility.html#tdefault">TDefault</a></li><li><a href="./utility.html#tpartialsubset">TPartialSubset</a></li><li><a href="./utility.html#tpartialsubsetfromkeys">TPartialSubsetFromKeys</a></li><li><a href="./utility.html#tref">TRef</a></li><li><a href="./utility.html#tstateunstyled">TStateUnstyled</a></li><li><a href="./utility.html#tstyledprops">TStyledProps</a></li><li><a href="./utility.html#tstyles">TStyles</a></li></ul><h2 id="type-aliases-1" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases-1" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="fcomponentfactory" tabindex="-1">FComponentFactory <a class="header-anchor" href="#fcomponentfactory" aria-label="Permalink to &quot;FComponentFactory&quot;">​</a></h3><p>Ƭ <strong>FComponentFactory</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Full</code></td><td style="text-align:left;">&lt;PProps, SState&gt;(<code>Props</code>: <code>PProps</code>, <code>RenderFunction</code>: <a href="./utility.html#tcomponentrenderfunction"><code>TComponentRenderFunction</code></a>&lt;<code>SState</code>&gt;, <code>UseStateFunction</code>: (<code>Props</code>: <code>PProps</code>) =&gt; <a href="./utility.html#tstateunstyled"><code>TStateUnstyled</code></a>&lt;<code>SState</code>&gt;, <code>UseStylesFunction</code>: (<code>StateUnstyled</code>: <a href="./utility.html#tstateunstyled"><code>TStateUnstyled</code></a>&lt;<code>SState</code>&gt;) =&gt; <code>SState</code>, <code>DisplayName?</code>: <code>string</code>) =&gt; <code>ReactElement</code></td></tr><tr><td style="text-align:left;"><code>NoProps</code></td><td style="text-align:left;">{ <code>Full</code>: &lt;SState&gt;(<code>RenderFunction</code>: <a href="./utility.html#tcomponentrenderfunction"><code>TComponentRenderFunction</code></a>&lt;<code>SState</code>&gt;, <code>UseStateFunction</code>: () =&gt; <a href="./utility.html#tstateunstyled"><code>TStateUnstyled</code></a>&lt;<code>SState</code>&gt;, <code>UseStylesFunction</code>: (<code>StateUnstyled</code>: <a href="./utility.html#tstateunstyled"><code>TStateUnstyled</code></a>&lt;<code>SState</code>&gt;) =&gt; <code>SState</code>, <code>DisplayName?</code>: <code>string</code>) =&gt; <code>ReactElement</code> ; <code>Stateless</code>: (<code>RenderFunction</code>: <a href="./utility.html#tcomponentrenderfunction"><code>TComponentRenderFunction</code></a>&lt;<a href="./utility.html"><code>FStyledState</code></a>&gt;, <code>UseStylesFunction</code>: () =&gt; <a href="./utility.html"><code>FStyledState</code></a>, <code>DisplayName?</code>: <code>string</code>) =&gt; <code>ReactElement</code> ; <code>Unstyled</code>: &lt;SState&gt;(<code>RenderFunction</code>: <a href="./utility.html#tcomponentrenderfunction"><code>TComponentRenderFunction</code></a>&lt;<code>SState</code>&gt;, <code>UseStateFunction</code>: () =&gt; <code>SState</code>, <code>DisplayName?</code>: <code>string</code>) =&gt; <code>ReactElement</code> }</td></tr><tr><td style="text-align:left;"><code>NoProps.Full</code></td><td style="text-align:left;">&lt;SState&gt;(<code>RenderFunction</code>: <a href="./utility.html#tcomponentrenderfunction"><code>TComponentRenderFunction</code></a>&lt;<code>SState</code>&gt;, <code>UseStateFunction</code>: () =&gt; <a href="./utility.html#tstateunstyled"><code>TStateUnstyled</code></a>&lt;<code>SState</code>&gt;, <code>UseStylesFunction</code>: (<code>StateUnstyled</code>: <a href="./utility.html#tstateunstyled"><code>TStateUnstyled</code></a>&lt;<code>SState</code>&gt;) =&gt; <code>SState</code>, <code>DisplayName?</code>: <code>string</code>) =&gt; <code>ReactElement</code></td></tr><tr><td style="text-align:left;"><code>NoProps.Stateless</code></td><td style="text-align:left;">(<code>RenderFunction</code>: <a href="./utility.html#tcomponentrenderfunction"><code>TComponentRenderFunction</code></a>&lt;<a href="./utility.html"><code>FStyledState</code></a>&gt;, <code>UseStylesFunction</code>: () =&gt; <a href="./utility.html"><code>FStyledState</code></a>, <code>DisplayName?</code>: <code>string</code>) =&gt; <code>ReactElement</code></td></tr><tr><td style="text-align:left;"><code>NoProps.Unstyled</code></td><td style="text-align:left;">&lt;SState&gt;(<code>RenderFunction</code>: <a href="./utility.html#tcomponentrenderfunction"><code>TComponentRenderFunction</code></a>&lt;<code>SState</code>&gt;, <code>UseStateFunction</code>: () =&gt; <code>SState</code>, <code>DisplayName?</code>: <code>string</code>) =&gt; <code>ReactElement</code></td></tr><tr><td style="text-align:left;"><code>Stateless</code></td><td style="text-align:left;">&lt;PProps&gt;(<code>Props</code>: <code>PProps</code>, <code>RenderFunction</code>: <a href="./utility.html#tcomponentrenderfunction"><code>TComponentRenderFunction</code></a>&lt;<a href="./utility.html#tstyledprops"><code>TStyledProps</code></a>&lt;<code>PProps</code>&gt;&gt;, <code>UseStylesFunction</code>: (<code>Props</code>: <code>PProps</code>) =&gt; <a href="./utility.html#tstyledprops"><code>TStyledProps</code></a>&lt;<code>PProps</code>&gt;, <code>DisplayName?</code>: <code>string</code>) =&gt; <code>ReactElement</code></td></tr><tr><td style="text-align:left;"><code>Unstyled</code></td><td style="text-align:left;">&lt;PProps, SState&gt;(<code>Props</code>: <code>PProps</code>, <code>RenderFunction</code>: <a href="./utility.html#tcomponentrenderfunction"><code>TComponentRenderFunction</code></a>&lt;<code>SState</code>&gt;, <code>UseStateFunction</code>: (<code>Props</code>: <code>PProps</code>) =&gt; <code>SState</code>, <code>DisplayName?</code>: <code>string</code>) =&gt; <code>ReactElement</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L83" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:83</a></p><hr><h3 id="frootstyles" tabindex="-1">FRootStyles <a class="header-anchor" href="#frootstyles" aria-label="Permalink to &quot;FRootStyles&quot;">​</a></h3><p>Ƭ <strong>FRootStyles</strong>: () =&gt; { <code>Root</code>: <code>string</code> }</p><h4 id="type-declaration-1" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-1" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (): <code>Object</code></p><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Root</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L12" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:12</a></p><hr><h3 id="fstylable" tabindex="-1">FStylable <a class="header-anchor" href="#fstylable" aria-label="Permalink to &quot;FStylable&quot;">​</a></h3><p>Ƭ <strong>FStylable</strong>: <code>Object</code></p><h4 id="type-declaration-2" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-2" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>style?</code></td><td style="text-align:left;"><code>CSSProperties</code></td></tr></tbody></table><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L20" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:20</a></p><hr><h3 id="pparentcomponent" tabindex="-1">PParentComponent <a class="header-anchor" href="#pparentcomponent" aria-label="Permalink to &quot;PParentComponent&quot;">​</a></h3><p>Ƭ <strong>PParentComponent</strong>: <a href="./utility.html"><code>FStyledState</code></a> &amp; { <code>children?</code>: <code>ReactNode</code> }</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L36" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:36</a></p><hr><h3 id="tcomplement" tabindex="-1">TComplement <a class="header-anchor" href="#tcomplement" aria-label="Permalink to &quot;TComplement&quot;">​</a></h3><p>Ƭ <strong>TComplement</strong>&lt;<code>T</code>, <code>U</code>&gt;: { [K in Exclude&lt;keyof T, keyof U&gt;]: T[K] }</p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <code>U</code></td></tr><tr><td style="text-align:left;"><code>U</code></td><td style="text-align:left;"><code>U</code></td></tr></tbody></table><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L41" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:41</a></p><hr><h3 id="tcomponentrenderfunction" tabindex="-1">TComponentRenderFunction <a class="header-anchor" href="#tcomponentrenderfunction" aria-label="Permalink to &quot;TComponentRenderFunction&quot;">​</a></h3><p>Ƭ <strong>TComponentRenderFunction</strong>&lt;<code>SState</code>&gt;: <code>Object</code></p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>SState</code></td></tr></tbody></table><h4 id="call-signature" tabindex="-1">Call signature <a class="header-anchor" href="#call-signature" aria-label="Permalink to &quot;Call signature&quot;">​</a></h4><p>▸ (<code>State</code>): <code>ReactElement</code>&lt;<code>any</code>, <code>string</code> | <code>JSXElementConstructor</code>&lt;<code>any</code>&gt;&gt;</p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>State</code></td><td style="text-align:left;"><code>SState</code></td></tr></tbody></table><h5 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>ReactElement</code>&lt;<code>any</code>, <code>string</code> | <code>JSXElementConstructor</code>&lt;<code>any</code>&gt;&gt;</p><h4 id="type-declaration-3" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-3" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>displayName?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L77" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:77</a></p><hr><h3 id="tdefault" tabindex="-1">TDefault <a class="header-anchor" href="#tdefault" aria-label="Permalink to &quot;TDefault&quot;">​</a></h3><p>Ƭ <strong>TDefault</strong>&lt;<code>T</code>, <code>TKeys</code>&gt;: { [Key in TKeys]-?: undefined extends T[Key] ? T[Key] : never }</p><p>Contains the optional properties of <code>T</code>, but they are now required.</p><h4 id="type-parameters-2" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>TKeys</code></td><td style="text-align:left;">extends keyof <code>T</code> = keyof <code>T</code></td></tr></tbody></table><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L47" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:47</a></p><hr><h3 id="tpartialsubset" tabindex="-1">TPartialSubset <a class="header-anchor" href="#tpartialsubset" aria-label="Permalink to &quot;TPartialSubset&quot;">​</a></h3><p>Ƭ <strong>TPartialSubset</strong>&lt;<code>T</code>, <code>U</code>&gt;: <code>Omit</code>&lt;<code>T</code>, keyof <code>U</code>&gt; &amp; <code>Partial</code>&lt;<code>Pick</code>&lt;<code>T</code>, keyof <code>U</code>&gt;&gt;</p><h4 id="type-parameters-3" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-3" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <code>U</code></td></tr><tr><td style="text-align:left;"><code>U</code></td><td style="text-align:left;"><code>U</code></td></tr></tbody></table><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L59" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:59</a></p><hr><h3 id="tpartialsubsetfromkeys" tabindex="-1">TPartialSubsetFromKeys <a class="header-anchor" href="#tpartialsubsetfromkeys" aria-label="Permalink to &quot;TPartialSubsetFromKeys&quot;">​</a></h3><p>Ƭ <strong>TPartialSubsetFromKeys</strong>&lt;<code>T</code>, <code>TKeys</code>&gt;: <code>Omit</code>&lt;<code>T</code>, <code>TKeys</code>&gt; &amp; <code>Partial</code>&lt;<code>Pick</code>&lt;<code>T</code>, <code>TKeys</code>&gt;&gt;</p><p>Make specific properties partial.</p><h4 id="type-parameters-4" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-4" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>TKeys</code></td><td style="text-align:left;">extends keyof <code>T</code></td></tr></tbody></table><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L55" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:55</a></p><hr><h3 id="tref" tabindex="-1">TRef <a class="header-anchor" href="#tref" aria-label="Permalink to &quot;TRef&quot;">​</a></h3><p>Ƭ <strong>TRef</strong>&lt;<code>T</code>&gt;: <code>Object</code></p><h4 id="type-parameters-5" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-5" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="type-declaration-4" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-4" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Ref</code></td><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L25" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:25</a></p><hr><h3 id="tstateunstyled" tabindex="-1">TStateUnstyled <a class="header-anchor" href="#tstateunstyled" aria-label="Permalink to &quot;TStateUnstyled&quot;">​</a></h3><p>Ƭ <strong>TStateUnstyled</strong>&lt;<code>SState</code>&gt;: <code>SState</code> extends <a href="./utility.html"><code>FStyledState</code></a> ? <a href="./utility.html#tpartialsubset"><code>TPartialSubset</code></a>&lt;<code>SState</code>, <a href="./utility.html"><code>FStyledState</code></a>&gt; : <code>SState</code></p><p>Sometimes the Props are the State, so we do not have a separate type. Thus, we use a conditional type here in case the template parameter does not contain (new) styles.</p><h4 id="type-parameters-6" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-6" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>SState</code></td></tr></tbody></table><h4 id="defined-in-10" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-10" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L69" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:69</a></p><hr><h3 id="tstyledprops" tabindex="-1">TStyledProps <a class="header-anchor" href="#tstyledprops" aria-label="Permalink to &quot;TStyledProps&quot;">​</a></h3><p>Ƭ <strong>TStyledProps</strong>&lt;<code>PProps</code>&gt;: <code>PProps</code> &amp; <a href="./utility.html"><code>FStyledState</code></a></p><p>A type of state that is the Props, equipped with styling.</p><h4 id="type-parameters-7" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-7" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>PProps</code></td></tr></tbody></table><h4 id="defined-in-11" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-11" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L75" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:75</a></p><hr><h3 id="tstyles" tabindex="-1">TStyles <a class="header-anchor" href="#tstyles" aria-label="Permalink to &quot;TStyles&quot;">​</a></h3><p>Ƭ <strong>TStyles</strong>&lt;<code>T</code>&gt;: () =&gt; { [Index in T]: string }</p><p>The return value of <code>makeStyles</code> for <code>T</code> union of class names.</p><h4 id="type-parameters-8" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-8" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">extends <code>string</code></td></tr></tbody></table><h4 id="type-declaration-5" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-5" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (): { [Index in T]: string }</p><h5 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p>{ [Index in T]: string }</p><h4 id="defined-in-12" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-12" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/b173d2b/Source/Utility/Utility.Types.ts#L18" target="_blank" rel="noreferrer">Utility/Utility.Types.ts:18</a></p>',118),r=[l];function i(n,c,s,h,y,p){return a(),t("div",null,r)}const b=e(d,[["render",i]]);export{u as __pageData,b as default};
