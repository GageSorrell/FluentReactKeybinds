import{h as F,u as m,l as D,y as f,c as C,m as s,a,V as q,o as K}from"./chunks/framework.lhzzn3gs.js";import{c as S,r as i,K as B,F as A,w as T,a as _}from"./chunks/UseKeybindDialog.Styles.J-GOknaZ.js";import{K as O,B as v}from"./chunks/UseKeybindDialog.eqC-gMeW.js";import"./chunks/UseKeybindRecorder.s8mOIq4b.js";const x=s("h1",{id:"keybind-dialog",tabindex:"-1"},[a("Keybind Dialog "),s("a",{class:"header-anchor",href:"#keybind-dialog","aria-label":'Permalink to "Keybind Dialog"'},"​")],-1),P=s("p",null,[a("This component wraps the "),s("code",null,"KeybindRecorder"),a(" component, captures focus, and allows the user to cancel (and thus close) the dialog, and to confirm their input and continue the user experience.")],-1),w=s("h2",{id:"example",tabindex:"-1"},[a("Example "),s("a",{class:"header-anchor",href:"#example","aria-label":'Permalink to "Example"'},"​")],-1),R=q(`<details class="details custom-block"><summary>Code Snippet</summary><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> React </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;react&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ReactDOM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;react-dom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { FluentProvider, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Theme, webLightTheme, webDarkTheme } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@fluentui/react-components&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { KeySequence, KeybindDialog } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;react-fluent-keybinds&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DarkMode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.matchMedia </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">matchMedia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;(prefers-color-scheme: dark)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).matches;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> theme</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Theme</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DarkMode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webDarkTheme </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webLightTheme;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Title</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Example Dialog Component&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;This example dialog accepts a keybind, which is displayed below the triggering button once the keybind is saved.&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Sequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SetSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([ ]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setOpen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onSave</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">NewSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    SetSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NewSequence);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ReactDOM.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">render</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FluentProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ theme } }&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onClick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOpen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) } }&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Open Dialog</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">KeybindDialog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Content,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Sequence,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            Title,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            onSave,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            open,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            setOpen }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FluentProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></details><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h3><ul><li><a href="./keybind-dialog.html#fkeybinddialogopendata">FKeybindDialogOpenData</a></li><li><a href="./keybind-dialog.html#fkeybindopenstate">FKeybindOpenState</a></li><li><a href="./keybind-dialog.html#pkeybinddialog">PKeybindDialog</a></li><li><a href="./keybind-dialog.html#skeybinddialog">SKeybindDialog</a></li></ul><h2 id="type-aliases-1" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases-1" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="fkeybinddialogopendata" tabindex="-1">FKeybindDialogOpenData <a class="header-anchor" href="#fkeybinddialogopendata" aria-label="Permalink to &quot;FKeybindDialogOpenData&quot;">​</a></h3><p>Ƭ <strong>FKeybindDialogOpenData</strong>: <code>DialogOpenChangeData</code> &amp; { <code>Type</code>: <a href="./keybind-dialog.html#fkeybindopenstate"><code>FKeybindOpenState</code></a> }</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/41f23cc/Source/Component/KeybindDialog/KeybindDialog.Types.ts#L15" target="_blank" rel="noreferrer">Component/KeybindDialog/KeybindDialog.Types.ts:15</a></p><hr><h3 id="fkeybindopenstate" tabindex="-1">FKeybindOpenState <a class="header-anchor" href="#fkeybindopenstate" aria-label="Permalink to &quot;FKeybindOpenState&quot;">​</a></h3><p>Ƭ <strong>FKeybindOpenState</strong>: <code>&quot;Opened&quot;</code> | <code>&quot;Success&quot;</code> | <code>&quot;Canceled&quot;</code></p><p>The trichotomy of the dialog&#39;s open/closed state.</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/41f23cc/Source/Component/KeybindDialog/KeybindDialog.Types.ts#L23" target="_blank" rel="noreferrer">Component/KeybindDialog/KeybindDialog.Types.ts:23</a></p><hr><h3 id="pkeybinddialog" tabindex="-1">PKeybindDialog <a class="header-anchor" href="#pkeybinddialog" aria-label="Permalink to &quot;PKeybindDialog&quot;">​</a></h3><p>Ƭ <strong>PKeybindDialog</strong>: <code>Pick</code>&lt;<a href="./key.html#pkey"><code>PKey</code></a>, <code>&quot;BackgroundColor&quot;</code> | <code>&quot;CornerDirection&quot;</code> | <code>&quot;Color&quot;</code>&gt; &amp; <a href="./keybind-recorder.html#pkeybindrecorder"><code>PKeybindRecorder</code></a> &amp; { <code>Content</code>: <code>string</code> | <code>ReactElement</code> ; <code>Title</code>: <code>string</code> ; <code>onCancel?</code>: () =&gt; <code>void</code> ; <code>onOpenChange?</code>: (<code>Event</code>: <code>DialogOpenChangeEvent</code>, <code>Data</code>: <a href="./keybind-dialog.html#fkeybinddialogopendata"><code>FKeybindDialogOpenData</code></a>) =&gt; <code>void</code> ; <code>onSave?</code>: (<code>NewSequence</code>: <a href="./key.html#fdomkey"><code>FDomKey</code></a>[]) =&gt; <code>void</code> ; <code>open</code>: <code>boolean</code> ; <code>setOpen?</code>: (<code>Old</code>: <code>boolean</code>) =&gt; <code>void</code> }</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/41f23cc/Source/Component/KeybindDialog/KeybindDialog.Types.ts#L31" target="_blank" rel="noreferrer">Component/KeybindDialog/KeybindDialog.Types.ts:31</a></p><hr><h3 id="skeybinddialog" tabindex="-1">SKeybindDialog <a class="header-anchor" href="#skeybinddialog" aria-label="Permalink to &quot;SKeybindDialog&quot;">​</a></h3><p>Ƭ <strong>SKeybindDialog</strong>: <code>Omit</code>&lt;<a href="./keybind-dialog.html#pkeybinddialog"><code>PKeybindDialog</code></a>, <code>&quot;MaxLength&quot;</code> | <code>&quot;onOpenChange&quot;</code> | <code>&quot;setOpen&quot;</code>&gt; &amp; <code>FFluentDialogOpenChangeEventHandler</code> &amp; { <code>OnCancel</code>: () =&gt; <code>void</code> ; <code>OnSave</code>: () =&gt; <code>void</code> ; <code>SaveButtonRef</code>: <code>RefObject</code>&lt;<code>HTMLButtonElement</code>&gt; } &amp; <a href="./utility.html"><code>FStyledState</code></a></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/GageSorrell/FluentReactKeybinds/blob/41f23cc/Source/Component/KeybindDialog/KeybindDialog.Types.ts#L68" target="_blank" rel="noreferrer">Component/KeybindDialog/KeybindDialog.Types.ts:68</a></p>`,25),H=JSON.parse('{"title":"Keybind Dialog","description":"","frontmatter":{},"headers":[],"relativePath":"components/keybind-dialog.md","filePath":"components/keybind-dialog.md"}'),M={name:"components/keybind-dialog.md"},J=Object.assign(M,{setup(L){const t=F(),l=m().isDark,h=e=>{let n=l.value;const o="Example Dialog Component",k="This example dialog accepts a keybind, which is displayed below the triggering button once the keybind is saved.",[p,r]=i.useState([]),c=u=>{r(u)},[E,d]=i.useState(!1),g=i.createElement(O,{onSave:c,Sequence:p,open:E,setOpen:d,Title:o,Content:k},null),y=i.createElement(B,{Sequence:p}),b=i.createElement(v,{children:["Open Dialog"],style:{marginBottom:"1rem"},onClick:()=>{d(!0)}});return i.createElement(A,{theme:n?T:_},b,y,g)};return D(()=>{const e=S(t.value);f(l,(n,o)=>{e.render(i.createElement(h,{},null))}),e.render(i.createElement(h,{},null))}),(e,n)=>(K(),C("div",null,[x,P,w,s("div",{ref_key:"DefaultExample",ref:t},null,512),R]))}});export{H as __pageData,J as default};
